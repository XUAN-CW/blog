# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  
  # box 地址 https://app.vagrantup.com/centos/boxes/7/versions/2004.01
  config.vm.box = "CentOS-7.8.2003"
#  config.vm.box = "generic_centos7"

  # config.vm.synced_folder "C:/cache/software-for-development/yum/x86_64/7", "/var/cache/yum/x86_64/7"

  # 使用用户名登录
#  config.ssh.username = 'root'
#  config.ssh.password = 'root'
#  config.ssh.insert_key = false

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.200.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
 config.vm.provider "virtualbox" do |vb|
   # Display the VirtualBox GUI when booting the machine
   # vb.gui = true
 
   vb.cpus = 2
   # Customize the amount of memory on the VM:
   vb.memory = "8192"
 end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  
  config.vm.provision "file", source: "docker-save", destination: "/tmp/docker-save"
  config.vm.provision "shell", inline: "mv /tmp/docker-save /usr/local/bin/docker-save"

  config.vm.provision "file", source: "docker-load", destination: "/tmp/docker-load"
  config.vm.provision "shell", inline: "mv /tmp/docker-load /usr/local/bin/docker-load"
  
  config.vm.provision "file", source: "daemon.json", destination: "/tmp/daemon.json"
  config.vm.provision "shell", inline: "sudo mkdir -p /etc/docker && mv /tmp/daemon.json /etc/docker/daemon.json"
  
  # https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
  config.vm.provision "file", source: "docker-compose-Linux-x86_64", destination: "/tmp/docker-compose-Linux-x86_64"
  config.vm.provision "shell", inline: "sudo mkdir -p /usr/local/bin && mv /tmp/docker-compose-Linux-x86_64 /usr/local/bin/docker-compose"
  
  config.vm.provision "file", source: "CentOS-7.8.2003_init.sh", destination: "/tmp/CentOS-7.8.2003_init.sh"
  config.vm.provision "shell", inline: "chmod +x /tmp/CentOS-7.8.2003_init.sh &&  dos2unix /tmp/CentOS-7.8.2003_init.sh && /tmp/CentOS-7.8.2003_init.sh"
  
end
